{"version":3,"file":"static/js/764.8579aa62.chunk.js","mappings":"6LAsDA,UAlDe,WAAO,IAADA,EACnBC,GAAwCC,EAAAA,EAAAA,UAAS,CAC/C,iBACA,iBACA,iBACA,iBACA,iBACA,mBACAC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAPKI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAQ9BI,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIJ,GACZ,IAAAK,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAqC,QAA9BhB,EAAGc,EAAaG,IAAI,kBAAU,IAAAjB,EAAAA,EAAI,GAczCkB,EAAgBb,EAAac,QAAO,SAAAC,GAAK,OAAIA,EAAMC,SAASL,EAAQ,IAE1E,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,YACLF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOX,EAASY,SAdf,SAAAC,GACxB,IAAMC,EAAeD,EAAEE,OAAOJ,MAC9B,GAAqB,KAAjBG,EACF,OAAOf,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,QAASc,GAC7B,KASML,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAExBC,EAAAA,EAAAA,KAAA,MAAAD,SACGN,EAAcc,KAAI,SAAAZ,GACjB,OACEK,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKf,GAASgB,MAAO,CAAEC,KAAM9B,GAAWiB,SAC7CJ,KAFIA,EAMb,QAIR,C","sources":["pages/Movies.js"],"sourcesContent":["// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [moviesSearch, setMoviesSearch] = useState([\n    'movie-search-1',\n    'movie-search-2',\n    'movie-search-3',\n    'movie-search-4',\n    'movie-search-5',\n    'movie-search-6',\n  ]);\n  const location = useLocation();\n  console.log(setMoviesSearch);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n\n  // useEffect(() => {\n  //   //HTTP\n  // }, []);\n\n  const updateQueryString = e => {\n    const movieIdValue = e.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const visibleMovies = moviesSearch.filter(movie => movie.includes(movieId));\n\n  return (\n    <>\n      <div>Movies</div>\n      <form>\n        <input type=\"text\" value={movieId} onChange={updateQueryString} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {visibleMovies.map(movie => {\n          return (\n            <li key={movie}>\n              <Link to={`${movie}`} state={{ from: location }}>\n                {movie}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","moviesSearch","setMoviesSearch","location","useLocation","console","log","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieId","get","visibleMovies","filter","movie","includes","_jsxs","_Fragment","children","_jsx","type","value","onChange","e","movieIdValue","target","map","Link","to","concat","state","from"],"sourceRoot":""}